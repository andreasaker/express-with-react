{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\src\\\\blog\\\\EditBlogEntryForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport { editBlogEntry } from './BlogQueries';\nimport { getUsers } from '../users/UserQueries';\n\nconst EditBlogEntryForm = props => {\n  let _useState = useState(props.entry),\n      _useState2 = _slicedToArray(_useState, 2),\n      entry = _useState2[0],\n      setEntry = _useState2[1];\n\n  let _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  useEffect(() => {\n    getUsers().then(res => setUsers(res));\n  }, []);\n\n  let handleChange = e => {\n    let name = e.target.name;\n\n    if (name === \"user_id\") {\n      let entryName = e.target.selectedOptions[0].text;\n      setEntry(_objectSpread({}, entry, {\n        entry_name: entryName\n      }));\n    }\n\n    setEntry(_objectSpread({}, entry, {\n      [name]: e.target.value\n    }));\n  };\n\n  let handleSubmit = e => {\n    editBlogEntry(entry);\n    props.editEntry(entry);\n    e.preventDefault();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    name: \"user_id\",\n    value: entry.user_id,\n    onChange: e => {\n      handleChange(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"- Choose -\"), users.map(u => React.createElement(\"option\", {\n    key: u.id,\n    value: u.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, u.name))), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    onChange: e => {\n      handleChange(e);\n    },\n    value: entry.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"content\",\n    placeholder: \"Content\",\n    onChange: e => {\n      handleChange(e);\n    },\n    value: entry.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"img_link\",\n    placeholder: \"Image link\",\n    onChange: e => {\n      handleChange(e);\n    },\n    value: entry.img_link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Update entry\"));\n};\n\nexport default EditBlogEntryForm; //Not Done!","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/reactexpress/client/src/blog/EditBlogEntryForm.js"],"names":["React","useEffect","useState","editBlogEntry","getUsers","EditBlogEntryForm","props","entry","setEntry","users","setUsers","then","res","handleChange","e","name","target","entryName","selectedOptions","text","entry_name","value","handleSubmit","editEntry","preventDefault","user_id","map","u","id","title","content","img_link"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { editBlogEntry } from './BlogQueries';\r\nimport {getUsers} from '../users/UserQueries';\r\n\r\nconst EditBlogEntryForm = props => {\r\n\r\n    \r\n    let [entry, setEntry] = useState(props.entry);\r\n    let [users, setUsers] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getUsers().then(res => setUsers(res)); \r\n    },[]);\r\n    \r\n    let handleChange = e => {\r\n        let name = e.target.name;\r\n        if( name === \"user_id\"){\r\n            let entryName = e.target.selectedOptions[0].text\r\n            setEntry({...entry, entry_name: entryName});\r\n        }\r\n        setEntry({...entry, [name]: e.target.value});\r\n    }\r\n\r\n    let handleSubmit = e =>{\r\n        editBlogEntry(entry);\r\n        props.editEntry(entry);\r\n        e.preventDefault();\r\n    }\r\n\r\n    \r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n                <select name=\"user_id\" value={entry.user_id} onChange={e=>{handleChange(e)}}>\r\n                    <option>- Choose -</option>  \r\n                    {users.map(u =>\r\n                        <option key={u.id} value={u.id}>{u.name}</option>    \r\n                    )}\r\n                </select>\r\n                <input type=\"text\" name=\"title\" placeholder=\"Title\" onChange={e=>{handleChange(e)}} value={entry.title}></input>\r\n                <input type=\"text\" name=\"content\" placeholder=\"Content\" onChange={e=>{handleChange(e)}} value={entry.content}></input>\r\n                <input type=\"text\" name=\"img_link\" placeholder=\"Image link\" onChange={e=>{handleChange(e)}} value={entry.img_link}></input>\r\n                <button type=\"submit\">Update entry</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EditBlogEntryForm;\r\n\r\n\r\n//Not Done!"]},"metadata":{},"sourceType":"module"}