{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\src\\\\blog\\\\BlogEntries.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport { getBlogEntries, deleteBlogEntry } from './BlogQueries';\nimport AddBlogEntryForm from './AddBlogEntryForm';\nimport EditBlogEntry from './EditBlogEntryForm';\n\nconst BlogEntries = () => {\n  let _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      blogEntries = _useState2[0],\n      setBlogEntries = _useState2[1];\n\n  let _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edit = _useState4[0],\n      setEdit = _useState4[1];\n\n  let _useState5 = useState({\n    id: null\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      editedEntry = _useState6[0],\n      setEditedEntry = _useState6[1];\n\n  const addNewEntry = entry => {\n    setBlogEntries([...blogEntries, entry]);\n  };\n\n  const editBlogEntry = updatedEntry => {\n    let newEntries = blogEntries.map(e => e.id === updatedEntry.id ? updatedEntry : e);\n    setBlogEntries(newEntries);\n    setEdit(false);\n  };\n\n  const handleRemove = target => {\n    if (window.confirm(`Are you sure you want to remove: ${target.title}`)) {\n      deleteBlogEntry(target.id);\n      let updatedEntries = blogEntries.filter(e => e.id !== target.id);\n      setBlogEntries(updatedEntries);\n    }\n  };\n\n  const handleEdit = target => {\n    setEditedEntry(target);\n    setEdit(true);\n  };\n\n  useEffect(() => {\n    getBlogEntries().then(res => setBlogEntries(res));\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"blogContent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"blogentryform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, edit ? React.createElement(EditBlogEntry, {\n    editBlogEntry: editBlogEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : React.createElement(AddBlogEntryForm, {\n    addNewEntry: addNewEntry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"bloglist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, blogEntries.map(entry => React.createElement(\"div\", {\n    key: entry.id,\n    className: \"entries\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, entry.img_link), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, entry.entry_name), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, entry.title), entry.content), React.createElement(\"div\", {\n    className: \"entryOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"delBtn\",\n    onClick: () => handleRemove(entry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Remove\"), React.createElement(\"button\", {\n    className: \"editBtn\",\n    onClick: () => handleEdit(entry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Edit\"))))));\n};\n\nexport default BlogEntries;","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/reactexpress/client/src/blog/BlogEntries.js"],"names":["React","useState","useEffect","useReducer","getBlogEntries","deleteBlogEntry","AddBlogEntryForm","EditBlogEntry","BlogEntries","blogEntries","setBlogEntries","edit","setEdit","id","editedEntry","setEditedEntry","addNewEntry","entry","editBlogEntry","updatedEntry","newEntries","map","e","handleRemove","target","window","confirm","title","updatedEntries","filter","handleEdit","then","res","img_link","entry_name","content"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\r\nimport { getBlogEntries, deleteBlogEntry } from './BlogQueries';\r\nimport AddBlogEntryForm from './AddBlogEntryForm';\r\nimport EditBlogEntry from './EditBlogEntryForm';\r\n\r\nconst BlogEntries = () => {\r\n\r\n    let [blogEntries, setBlogEntries] = useState([]);\r\n    let [edit, setEdit] = useState(false);\r\n    let [editedEntry, setEditedEntry] = useState({id: null});\r\n\r\n    const addNewEntry = entry => {\r\n        setBlogEntries([...blogEntries, entry]);\r\n    }\r\n\r\n    const editBlogEntry = updatedEntry => {\r\n        let newEntries = blogEntries.map(e => e.id === updatedEntry.id ? updatedEntry : e)\r\n        setBlogEntries(newEntries);\r\n        setEdit(false);\r\n    }\r\n\r\n    const handleRemove = target => {\r\n        if(window.confirm(`Are you sure you want to remove: ${target.title}`)){\r\n            deleteBlogEntry(target.id);\r\n            let updatedEntries = blogEntries.filter(e => e.id !== target.id);\r\n            setBlogEntries(updatedEntries);\r\n        }\r\n    }\r\n\r\n    const handleEdit = target => {\r\n        setEditedEntry(target)\r\n        setEdit(true);\r\n    }\r\n\r\n    \r\n    useEffect(()=>{\r\n        getBlogEntries().then(res => setBlogEntries(res));\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <div className=\"blogContent\">\r\n            <div className=\"blogentryform\">\r\n                {edit ? (\r\n                    <EditBlogEntry editBlogEntry={editBlogEntry}/>\r\n                ):(\r\n                    <AddBlogEntryForm addNewEntry={addNewEntry} />\r\n                )}\r\n            \r\n            </div>\r\n            <div className=\"bloglist\">\r\n            { blogEntries.map(entry => \r\n                \r\n                    <div key={entry.id} className=\"entries\">\r\n                        <div>{entry.img_link}</div>\r\n                        <div>{entry.entry_name}</div>\r\n                        <div>\r\n                            <h2>{entry.title}</h2>\r\n                            {entry.content}\r\n                        </div>\r\n                    <div className=\"entryOptions\">\r\n                        <button className=\"delBtn\" onClick={() => handleRemove(entry)}>Remove</button>\r\n                        <button className=\"editBtn\" onClick={() => handleEdit(entry)}>Edit</button>\r\n                    </div> \r\n                    </div>\r\n                )\r\n        }\r\n            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BlogEntries;"]},"metadata":{},"sourceType":"module"}