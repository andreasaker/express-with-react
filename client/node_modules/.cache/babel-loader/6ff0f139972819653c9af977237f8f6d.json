{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\src\\\\users\\\\UserList.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddUserForm from './AddUserForm';\nimport EditUserForm from './EditUserForm';\nimport { getUsers, removeUser } from './UserQueries';\n\nconst UserList = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        edit = _useState4[0],\n        setEdit = _useState4[1];\n\n  const _useState5 = useState({\n    id: null\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user = _useState6[0],\n        setUser = _useState6[1];\n\n  const addUser = newUser => {\n    setUsers([...users, newUser]);\n  };\n\n  const updateUsers = updatedUser => {\n    let newUsers = users.map(u => u.id === updatedUser.id ? updatedUser : u);\n    setUsers(newUsers);\n  };\n\n  const handleEditUser = target => {\n    setUser(target);\n    setEdit(true);\n    console.log(\"Editing\");\n  };\n\n  const handleRemove = targetId => {\n    removeUser(targetId);\n    let newUsers = users.filter(u => u.id !== targetId);\n    setUsers(newUsers);\n  };\n\n  useEffect(() => {\n    getUsers().then(res => setUsers(res));\n  }, []);\n\n  const toggleButtons = e => {\n    console.log(e.target.parentElement.id);\n    let parent = document.getElementById(e.target.parentElement.id);\n    let Child = React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"HAJ\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })); //parent.insertAdjacentHTML('afterend', \"\" );\n    //eBtn.disabled = !eBtn.disabled;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"userList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, users.map(u => user.id === u.id ? React.createElement(\"tr\", {\n    key: u.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"ha\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"da\"), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"delBtn\",\n    onClick: () => {\n      handleRemove(u.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Delete\"))) : React.createElement(\"tr\", {\n    key: u.id,\n    id: `user-row-${u.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, u.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, u.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"editBtn\",\n    onClick: () => handleEditUser(u),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Edit\"), \" \")))))), React.createElement(\"div\", {\n    className: \"row-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, edit ? React.createElement(EditUserForm, {\n    user: user,\n    updateUsers: updateUsers,\n    setEdit: setEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }) : React.createElement(AddUserForm, {\n    addUser: addUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n};\n\nexport default UserList;","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/reactexpress/client/src/users/UserList.js"],"names":["React","useState","useEffect","AddUserForm","EditUserForm","getUsers","removeUser","UserList","users","setUsers","edit","setEdit","id","user","setUser","addUser","newUser","updateUsers","updatedUser","newUsers","map","u","handleEditUser","target","console","log","handleRemove","targetId","filter","then","res","toggleButtons","e","parentElement","parent","document","getElementById","Child","name","email"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport AddUserForm from './AddUserForm';\r\nimport EditUserForm from './EditUserForm';\r\nimport {getUsers, removeUser} from './UserQueries';\r\n\r\nconst UserList = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n    const [user, setUser] = useState({id: null});\r\n\r\n    const addUser = newUser => {\r\n        setUsers([...users, newUser]);\r\n    }\r\n\r\n    const updateUsers = updatedUser => {\r\n      let newUsers = users.map(u => u.id === updatedUser.id ? updatedUser : u);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleEditUser = target => {\r\n        setUser(target);\r\n        setEdit(true);\r\n        console.log(\"Editing\")\r\n    }\r\n\r\n    const handleRemove = targetId => {\r\n        removeUser(targetId);\r\n        let newUsers = users.filter(u => u.id !== targetId);\r\n        setUsers(newUsers);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers().then(res => setUsers(res));\r\n    }, []);\r\n    \r\n\r\n\r\n    const toggleButtons = e => {\r\n        console.log(e.target.parentElement.id);\r\n        let parent = document.getElementById(e.target.parentElement.id)\r\n        let Child = <tr><td>HAJ</td><td></td><td></td></tr>;\r\n        //parent.insertAdjacentHTML('afterend', \"\" );\r\n        //eBtn.disabled = !eBtn.disabled;\r\n    }\r\n\r\n    return(\r\n        <div className=\"userList\">\r\n            <div className=\"row-1\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {users.map(u => \r\n                    user.id === u.id ? (\r\n                        <tr key={u.id}>\r\n                            <td>ha</td>\r\n                            <td>da</td>\r\n                            <td><button className=\"delBtn\"  onClick={() => { handleRemove(u.id)}}>Delete</button></td>\r\n                        </tr>\r\n                    ):(\r\n                    <tr key={u.id} id={`user-row-${u.id}`} >\r\n                    <td>{u.name}</td>\r\n                    <td>{u.email}</td>\r\n                    <td><button className=\"editBtn\" onClick={() => handleEditUser(u)}>Edit</button> </td>\r\n                    </tr>\r\n                    )\r\n                )}\r\n                </tbody>\r\n            </table>    \r\n            </div>\r\n            <div className=\"row-2\">\r\n                {edit ? (\r\n                 <EditUserForm user={user} updateUsers={updateUsers} setEdit={setEdit}/>\r\n                ) : (\r\n                 <AddUserForm addUser={addUser} />\r\n                )}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default UserList;"]},"metadata":{},"sourceType":"module"}