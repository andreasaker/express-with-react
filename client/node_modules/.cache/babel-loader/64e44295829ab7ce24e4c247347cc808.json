{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Andreas\\\\Documents\\\\sites\\\\reactexpress\\\\client\\\\src\\\\users\\\\UserList.js\";\nimport React, { useState, useEffect } from 'react';\nimport AddUserForm from './AddUserForm';\nimport EditUserForm from './EditUserForm';\nimport { getUsers, removeUser } from './UserQueries';\n\nconst UserList = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        edit = _useState4[0],\n        setEdit = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user = _useState6[0],\n        setUser = _useState6[1];\n\n  const addUser = newUser => {\n    setUsers([...users, newUser]);\n  };\n\n  const updateUsers = updatedUser => {\n    let newUsers = users.map(u => u.id === updatedUser.id ? updatedUser : u);\n    setUsers(newUsers);\n  };\n\n  const handleEditUser = target => {\n    setUser(target);\n    setEdit(true);\n  };\n\n  const handleRemove = targetId => {\n    removeUser(targetId);\n    let newUsers = users.filter(u => u.id !== targetId);\n    setUsers(newUsers);\n  };\n\n  useEffect(() => {\n    getUsers().then(res => setUsers(res));\n  }, []);\n\n  const toggleButtons = id => {\n    let btn = document.getElementById(\"editBtn\");\n    console.log(btn);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"userList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, users.map(u => React.createElement(\"tr\", {\n    key: u.id,\n    onClick: e => toggleButtons(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, u.name), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, u.email), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"editBtn\",\n    disabled: \"disabled\",\n    onClick: () => handleEditUser(u),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Edit\"), \" \", React.createElement(\"button\", {\n    disabled: \"disabled\",\n    onClick: () => {\n      handleRemove(u.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Delete\"))))))), React.createElement(\"div\", {\n    className: \"row-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, edit ? React.createElement(EditUserForm, {\n    user: user,\n    updateUsers: updateUsers,\n    setEdit: setEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : React.createElement(AddUserForm, {\n    addUser: addUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nexport default UserList;","map":{"version":3,"sources":["C:/Users/Andreas/Documents/sites/reactexpress/client/src/users/UserList.js"],"names":["React","useState","useEffect","AddUserForm","EditUserForm","getUsers","removeUser","UserList","users","setUsers","edit","setEdit","user","setUser","addUser","newUser","updateUsers","updatedUser","newUsers","map","u","id","handleEditUser","target","handleRemove","targetId","filter","then","res","toggleButtons","btn","document","getElementById","console","log","e","name","email"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport AddUserForm from './AddUserForm';\r\nimport EditUserForm from './EditUserForm';\r\nimport {getUsers, removeUser} from './UserQueries';\r\n\r\nconst UserList = () => {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n    const [user, setUser] = useState({});\r\n\r\n    const addUser = newUser => {\r\n        setUsers([...users, newUser]);\r\n    }\r\n\r\n    const updateUsers = updatedUser => {\r\n      let newUsers = users.map(u => u.id === updatedUser.id ? updatedUser : u);\r\n      setUsers(newUsers);\r\n    }\r\n\r\n    const handleEditUser = target => {\r\n        setUser(target);\r\n        setEdit(true);\r\n    }\r\n\r\n    const handleRemove = targetId => {\r\n        removeUser(targetId);\r\n        let newUsers = users.filter(u => u.id !== targetId);\r\n        setUsers(newUsers);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers().then(res => setUsers(res));\r\n    }, []);\r\n    \r\n    const toggleButtons = id => {\r\n        let btn = document.getElementById(\"editBtn\")\r\n        console.log(btn);\r\n    }\r\n\r\n    return(\r\n        <div className=\"userList\">\r\n            <div className=\"row-1\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {users.map(u => \r\n                    <tr key={u.id} onClick={e => toggleButtons(e)}>\r\n                    <td>{u.name}</td>\r\n                    <td>{u.email}</td>\r\n                    <td><button id=\"editBtn\" disabled=\"disabled\" onClick={() => handleEditUser(u)}>Edit</button> <button disabled=\"disabled\" onClick={() => { handleRemove(u.id)}}>Delete</button></td>\r\n                    </tr>    \r\n                )}\r\n                </tbody>\r\n            </table>    \r\n            </div>\r\n            <div className=\"row-2\">\r\n                {edit ? (\r\n                 <EditUserForm user={user} updateUsers={updateUsers} setEdit={setEdit}/>\r\n                ) : (\r\n                 <AddUserForm addUser={addUser} />\r\n                )}\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default UserList;"]},"metadata":{},"sourceType":"module"}